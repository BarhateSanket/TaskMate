{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanke\\\\Development\\\\Projects\\\\TaskMate\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [refreshKey, setRefreshKey] = React.useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TaskMate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Simple full-stack task manager (React + Node + MongoDB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdded: () => setRefreshKey(k => k + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TaskList, {}, refreshKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XcZNmAccQatn2dt77ivv6vE4zbc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","refreshKey","setRefreshKey","useState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdded","k","Suspense","fallback","_c","$RefreshReg$"],"sources":["C:/Users/sanke/Development/Projects/TaskMate/frontend/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport \"./styles.css\";\n\nconst App: React.FC = () => {\n  const [refreshKey, setRefreshKey] = React.useState(0);\n  return (\n    <div className=\"container\">\n      <h1>TaskMate</h1>\n      <p>Simple full-stack task manager (React + Node + MongoDB)</p>\n      <TaskForm onAdded={() => setRefreshKey(k => k + 1)} />\n      {/* Key changes to force reload - simpler than lifting load logic for this small app */}\n      <React.Suspense fallback={<div>Loading tasks...</div>}>\n        <TaskList key={refreshKey} />\n      </React.Suspense>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC;EACrD,oBACEL,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBP,OAAA;MAAAO,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBX,OAAA;MAAAO,QAAA,EAAG;IAAuD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9DX,OAAA,CAACH,QAAQ;MAACe,OAAO,EAAEA,CAAA,KAAMR,aAAa,CAACS,CAAC,IAAIA,CAAC,GAAG,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtDX,OAAA,CAACJ,KAAK,CAACkB,QAAQ;MAACC,QAAQ,eAAEf,OAAA;QAAAO,QAAA,EAAK;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;MAAAJ,QAAA,eACpDP,OAAA,CAACF,QAAQ,MAAMK,UAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACT,EAAA,CAbID,GAAa;AAAAe,EAAA,GAAbf,GAAa;AAenB,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}