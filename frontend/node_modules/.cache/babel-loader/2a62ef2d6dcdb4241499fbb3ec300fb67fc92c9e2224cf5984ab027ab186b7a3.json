{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanke\\\\Development\\\\Projects\\\\TaskMate\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { API } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const load = async () => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await API.get(\"/tasks\");\n      setTasks(data);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to load tasks\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const toggle = async task => {\n    try {\n      await API.put(`/tasks/${task._id}`, {\n        completed: !task.completed\n      });\n      load();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const remove = async id => {\n    if (!confirm(\"Delete this task?\")) return;\n    try {\n      await API.delete(`/tasks/${id}`);\n      load();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tasks yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : tasks.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: t.completed,\n        onChange: () => toggle(t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        style: {\n          textDecoration: t.completed ? \"line-through\" : \"none\"\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondary\",\n        onClick: () => toggle(t),\n        children: t.completed ? \"Undo\" : \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"danger\",\n        onClick: () => remove(t._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Pagxvp8rtPw6MBgF7eSYjucQaJI=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","load","data","get","err","console","error","alert","toggle","task","put","_id","completed","remove","id","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","t","className","type","checked","onChange","style","textDecoration","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sanke/Development/Projects/TaskMate/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../api\";\r\nimport type { Task } from \"../types\";\r\n\r\nconst TaskList: React.FC = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const load = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await API.get<Task[]>(\"/tasks\");\r\n      setTasks(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to load tasks\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    load();\r\n  }, []);\r\n\r\n  const toggle = async (task: Task) => {\r\n    try {\r\n      await API.put(`/tasks/${task._id}`, { completed: !task.completed });\r\n      load();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const remove = async (id: string) => {\r\n    if (!confirm(\"Delete this task?\")) return;\r\n    try {\r\n      await API.delete(`/tasks/${id}`);\r\n      load();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      {tasks.length === 0 ? (\r\n        <div>No tasks yet</div>\r\n      ) : (\r\n        tasks.map((t) => (\r\n          <div className=\"task\" key={t._id}>\r\n            <input type=\"checkbox\" checked={t.completed} onChange={() => toggle(t)} />\r\n            <div className=\"title\" style={{ textDecoration: t.completed ? \"line-through\" : \"none\" }}>\r\n              {t.title}\r\n            </div>\r\n            <button className=\"secondary\" onClick={() => toggle(t)}>\r\n              {t.completed ? \"Undo\" : \"Done\"}\r\n            </button>\r\n            <button className=\"danger\" onClick={() => remove(t._id)}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}