{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanke\\\\Development\\\\Projects\\\\TaskMate\\\\frontend\\\\src\\\\components\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { API } from \"../api\";\nimport \"./TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAdded\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const add = async () => {\n    if (!title.trim()) return;\n    try {\n      await API.post(\"/tasks\", {\n        title\n      });\n      setTitle(\"\");\n      onAdded();\n    } catch (err) {\n      console.error(err);\n      alert(\"Error adding task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"New task title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: add,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","TaskForm","onAdded","_s","title","setTitle","add","trim","post","err","console","error","alert","children","className","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sanke/Development/Projects/TaskMate/frontend/src/components/TaskForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { API } from \"../api\";\r\nimport \"./TaskForm.css\";\r\n\r\ntype Props = { onAdded: () => void };\r\n\r\nconst TaskForm: React.FC<Props> = ({ onAdded }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const add = async () => {\r\n    if (!title.trim()) return;\r\n    try {\r\n      await API.post(\"/tasks\", { title });\r\n      setTitle(\"\");\r\n      onAdded();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error adding task\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-row\">\r\n        <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"New task title\" />\r\n        <button onClick={add}>Add</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,QAAQ;AAC5B,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxB,MAAMC,QAAyB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,GAAG,GAAG,MAAAA,CAAA,KAAY;IACtB,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;IACnB,IAAI;MACF,MAAMT,GAAG,CAACU,IAAI,CAAC,QAAQ,EAAE;QAAEJ;MAAM,CAAC,CAAC;MACnCC,QAAQ,CAAC,EAAE,CAAC;MACZH,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACvBb,OAAA;QAAOe,KAAK,EAAEX,KAAM;QAACY,QAAQ,EAAGC,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/FvB,OAAA;QAAQwB,OAAO,EAAElB,GAAI;QAAAO,QAAA,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvBIF,QAAyB;AAAAwB,EAAA,GAAzBxB,QAAyB;AAyB/B,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}